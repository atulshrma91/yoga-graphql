"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.walletMutations = exports.walletQueries = exports.walletTypes = void 0;
var graphql_scalars_1 = require("graphql-scalars");
var walletTypes = "\n".concat(graphql_scalars_1.DateTimeTypeDefinition, " \nscalar Decimal\nunion WalletSummary = TransactionalWallet | CollateralWallet | StakingWallet\n\ntype Wallet{\n  walletsID: String!\n  walletName: String\n  walletAssets: [walletAsset]\n}\n\ntype CreateWalletAssetOutput {\n  id: String\n  walletId: String\n  assetId: Int\n  depositAddress: String\n  tag: String\n}\n\ntype walletAsset {\n  walletAssetsID: String!\n  balance: Decimal\n  assets: Asset\n  assetBalanceType: AssetBalanceType\n  price: String\n  usdPrice: Decimal\n  sevenDayPercChange: Decimal\n}\n\ntype Asset {\n  id: Int\n  name: String!\n  ticker: String\n  fireblocksTicker: String\n  type: String!\n}\n\ntype AssetBalanceType {\n  balanceTypeName: String\n}\n\n type GenerateWalletsSummary {\n  currencySymbol: String\n  wallets: WalletsSummary\n  transactional: [TransactionalWallet]\n  collateral: [CollateralWallet]\n  staking: [StakingWallet]\n  membership: MembershipWallet\n }\n\n type GenerateWalletSummary {\n  wallet: WalletSummary\n }\n\n type GenerateWalletAssetsSummary {\n  totalRecords: Int\n  assets: [walletAsset]\n }\n\n type GenerateWalletTransactionsSummary {\n  totalRecords: Int\n  transactions: [Transaction]\n }\n\n type GenerateStakingAssetsSummary {\n  totalRecords: Int\n  assets: [walletAsset]\n }\n\n type WalletsSummary {\n  Transactional: TransactionalSummary\n  Collateral: CollateralSummary\n  Staking: StakingSummary\n  Membership: MembershipSummary\n }\n\n type TransactionalSummary { \n  totalWallets: Int\n  totalBalance: String\n  assets: [walletAsset]\n }\n\n type CollateralSummary { \n  totalWallets: Int\n  totalBalance: String\n  assets: [walletAsset]\n }\n\n type StakingSummary { \n  totalWallets: Int\n  stakedBalance: String\n  assets: [walletAsset]\n }\n\n type MembershipSummary { \n  membershipType: String\n  fiatCnfiPrice: String\n  committedCnfi: String\n }\n\n type TransactionalWallet { \n  walletId: String,\n  nickname: String,\n  assets: [walletAsset],\n  type: String,\n  balance: Decimal,\n  pendingRewards: String,\n  totalBalance: Decimal\n }\n\n type CollateralWallet {\n  walletId: String,\n  nickname: String,\n  assets: [walletAsset],\n  type: String,\n  ltvFeePercentage: Decimal,\n  totalLoanAmount: Decimal,\n  paidOnLoanAmount: Decimal,\n  loanEndDate: DateTime,\n  totalBalance: Decimal,\n  minimumPayment: Decimal\n  minimumPaymentDueDate:DateTime\n  outstandingPaymentBalance: Decimal\n }\n\n type StakingWallet {\n  walletId: String,\n  nickname: String,\n  assets: [walletAsset],\n  type: String,\n  balance: Decimal,\n  pendingRewards: String,\n  totalBalance: Decimal\n  stakedBalance: Decimal\n  availableRewards: Decimal\n  paidRewards: Decimal\n }\n\n type MembershipWallet {\n  walletId: String,\n  nickname: String,\n  membershipType: String\n }\n\n type Transaction {\n  transactionID: String,\n  type: String,\n  assets: Asset,\n  createdAt: DateTime,\n  assetQuantity: Decimal,\n  transactionPurpose: String\n  transactionStatus: String\n }\n");
exports.walletTypes = walletTypes;
var walletQueries = "\n  getEligibleWallets(asset: String, productID: String!): [Wallet]\n  generateWalletsSummary: GenerateWalletsSummary\n  generateWalletSummary(walletId: String!): GenerateWalletSummary\n  generateWalletAssetsSummary(walletId: String!, balanceType: String, offset: Int!, limit: Int!): GenerateWalletAssetsSummary\n  generateWalletTransactionsSummary(walletId: String!, offset: Int!, limit: Int!): GenerateWalletTransactionsSummary\n  generateStakingAssetsSummary(walletId: String!, balanceType: String!, offset: Int!, limit: Int!): GenerateStakingAssetsSummary\n";
exports.walletQueries = walletQueries;
var walletMutations = "\n  createUserWallet(walletTypeId: Int!, walletName: String!): Wallet\n  createWalletAsset(walletId: String!, assetId: Int!): CreateWalletAssetOutput\n  stakingBalanceUpdate(sourceWalletId: String!, targetWalletId: String!, assetId: Int!, balance: Decimal!,sourceBalanceType: String!, type: String!): walletAsset\n";
exports.walletMutations = walletMutations;
//# sourceMappingURL=wallets.schema.js.map